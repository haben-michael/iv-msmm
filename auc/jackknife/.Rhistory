p[3]
phi[row(phi)<col(phi)]
row(phi)
phi[row(phi)>col(phi)]
sum(phi[row(phi)>col(phi)])
M
sample(1:10,replace=TRUE)
phi
p
M
M
2/115
2/115^2
M
p
theta.hat
1+1/M - sum(p)/M^2
M
2/40^2
str(pairs)
cor(t(pairs))
str(ans)
10!
factorial(10)
us
rbind(us,1:M)
rbind(rbind(us,1:M),1:M)
str(us)
M
M
print(d)
Q
?return
str(us)
str(us)
us
t(us)
t(us) == 1:M
colSums(t(us) == 1:M)
tr
us
))
us
))
us
upper.sums
tr
upper.sums
nrow(us)
us[130,]
max(upper.sums)
sum(upper.sums==15)
which(upper.sums==15)
u[1,]
us[1,]
uu
M
upper.sums[tr==2]
which(tr==2)
us[which(tr==2),]
u.to.m(us[which(tr==2),5])
u.to.m(us[which(tr==2)[5],]
)
u.to.m(us[which(tr==2)[5],])
u.to.m(us[which(tr==2)[20],])
u.to.m(us[which(tr==2)[15],])
u.to.m(us[which(tr==2)[16],])
u.to.m(us[which(tr==2)[19],])
max(upper.sums)t
t
sum(u.to.m(rbind(us[tr==t,])[which.max(upper.sums[tr==t]),])
)
sum(u.to.m(rbind(us[tr==t,])[which.max(upper.sums[tr==t]),])
)/M^2
1/2+1/M+1/M^2
1/2*M*(M+1)-(M-t)
1/2-1/M/2+1/M^2
1/M^2-1/M^3-1/M/(M-1)
(2*M^2-1)/(M^4*(M-1))
nrow(us)
str(us)
tr
M
tr
tr
tr<4
tr<4
j <- 3
tr
c(rep(0,j-1+(j>tr)),rep(1,M-j+1-(j<tr)))
j
tr
j <- 1
c(rep(0,j-1+(j>tr)),rep(1,M-j+1-(j<tr)))
lapply(sapply(1:M,function(j)c(rep(0,j-1+(j>tr)),rep(1,M-j+1-(j<tr)))),length)
t
r
tr
j <- 1
tr
phi
phi
t
phi
sum(phi)
tr
M^2*theta.hat
1/2*M*(M+1)-(M-tr)
rep(list(1:3),3)
do.call(expand.grid,rep(list(1:3),3))
str(diffs)
5^5
head(diffs)
str(diffs)
head(diffs)
head(diffs)
str(pivots)
pivots
head(pivots)
head(pivots)
t(pivots)
t(pivots)-(1:(M+1))
pivots[1,]
pmax(pivots[1,],1:4)
pmax(pivots[1,],1:4)
upper
upper.sum
max(upper.sum)
M
t(pivots)
t(pivots) - (1:(M+1))
(t(pivots) - (1:(M+1)))<=0
colSums((t(pivots) - (1:(M+1)))<=0)
tr
pivots
tr
tr
head(pivots)
pivots
tr
head(pivots)
head(upper)
upper.sum
rbind(pivots[tr==t,])[which.max(upper.sums[tr==t]),]
pivots[tr==t,]
max(upper.sums)
upper.sums
max(upper.sums)
upper.sums
which.max(upper.sums)
upper.sums[1]
upper[1,]
?runif
upper.sums
min(upper.sums)
which.min(upper.sums)
which.min(upper.sums[tr==t])
t
t
t
t(pivots)
t(pivots) - (1:M)
t(pivots) - (1:M)
pmax((1:M) - t(pivots),0)
colSums(pmax((1:M) - t(pivots),0))
head(lower.sums)
head(pivots)
head(pivots)
head(lower.sums)
to.m(pivots[2,])
to.m(pivots[3,])
to.m(pivots[4,])
to.m(pivots[5,])
to.m(pivots[6,])
t
to.m(pivots[3,])
sum(diag(to.m(rbind(upper[tr==t,])[which.max(upper.sums[tr==t]),])))
length(tr)
dim(pivots)
tr
phi.max
phi.max
tr
phi.max
1/2*tr*(tr-1)
1/2*M*(M+1) - (M-tr)
tr
phi.max
(M-1)^2-M^2
1-2*M
1/M^2-1/M^3-1/M/(M-1)
(2*M^2-1)/M^4/(M-1)
(2*M^2+1)/M^4/(M-1)
(2*M^3+1)/M^4/(M-1)
(2*M-1)/M^3/(M-1)
tr
t
rm(t)
tr
)
rm(phi.max)
M
rm(p)
phi.max
tr
phi.max
phi.max
apply(phi.max,which.max)
apply(phi.max,1,which.max)
phi.max
p
phi
p
phi
sum(diag(phi)*(1:M - p))
phi
phi
phi[row(phi)>col(phi)]
sum(phi[row(phi)>col(phi)])
u
phi
sum(phi)
M
theta.hat*M^2
u+l
M
4/M^2*sum(diag(phi)*(1:M - p)
)
4/M^2*sum(diag(phi.max)*(1:M - p))
t
M
y
x[1]
y
order(y)
y[order[y]]
y[order(y)]
ps
t
ps.to.m(sort(ps))
phi <- ps.to.m(sort(ps))
phi
ps
ps<1:M
phi[c(5,3,1,2,4),]
phi
phi
phi[c(5,3,1,2,4),]
phi[c(1,2,4,3,5),]
phi
phi[c(1,2,4,3,5),]
phi
rm(phi.max)
rm(phi.max)
t <- tr
phi
)
str(parts)
ps
ps
ps
sum(phi)
S
expand.grid(rep(1:(M+1)),M)
rep(list(1:(M+1)),M)
rep(list(1:(M+1)),M)
M <- 3
expand.grid(rep(list(1:(M+1)),M))
diffs
max(diffs)
which.max(diffs)
diffs=max(diffs)
diffs==max(diffs)
as.list(diffs)
ps.list[diffs==max(diffs),]
as.list(ps.list[diffs==max(diffs),])
as.list(t(ps.list[diffs==max(diffs),]))
list(t(ps.list[diffs==max(diffs),]))
?split
ps.list[diffs==max(diffs),]
split(ps.list[diffs==max(diffs),],1:3)
split(ps.list[diffs==max(diffs),],1:nrow(ps.list))
split(ps.list[diffs==max(diffs),],1:sum(diffs==max(diffs)))
str(by.t)
diffs
ts
table(ts)
table(ts)
ps.to.m(ps.list[140,])
ts[140]
ps.to.m(ps.list[140,])
ts[140]
table(ts)
split(diffs,ts)
by.t
by.t[[1]]
by.t
by.t
cbind(diffs,ps.list)
by.t[[1]]
str(by.t[[1]])
str(cbind(diffs=diffs,ps.list))
by.t[[1]]
str(by.t[[1]])
cbind(diffs,ps.list)
ts
split(cbind(diffs,ps.list),ts)
split(as.data.frame(cbind(diffs,ps.list)),ts)
split(as.data.frame(cbind(diffs,ps.list)),ts)
ts
str(diffs)
by.t[[1]]
by.t[[1]]
by.t[[1]]$diffs
by.t[[1]][,-'diffs']
by.t[[1]][,-c('diffs')]
by.t[[1]][,-c('diffs')]
max.phis
max.phis
by.t
ps <- c(2,3,4)
max.phis['0']
by.t[[0]]
by.t[['0']]
min.phis
max.phis
max.phis
min.phis
min.phis
max.phis
min.phis
max.phis
max.phis
max.phis
min.phis
min.phis[[7]]
phi.min
min.phis
max.phis
by.t[[2]]
by.t[[2]]
min.phis
max.phis[[1]]
max.phis[[2]]
max.phis
str(ps)
str(ps.list)
ps.list[1:10,]
ps.list[,Var1==1]
ps.list[,ps.list$Var1==1]
colnames(ps.list)
str(ps.list)
ps.list[ps.list$Var1==0 & ps.list$Var2==0 & ps.list$var3==0,]
ps.list[ps.list$Var1==0,]
length(ps.list$var1)
length(ps.list$Var1)
sum((ps.list$Var1==0))
ps.list[ps.list$Var1==7 & ps.list$Var2==7 & ps.list$Var3==7,]
ps.list[ps.list$Var1==7 & ps.list$Var2==7 & ps.list$Var3==7, & ps.list$Var4==7]
ps.list[ps.list$Var1==7 & ps.list$Var2==7 & ps.list$Var3==7, & ps.list$Var4==7,]
ps.list[ps.list$Var1==7 & ps.list$Var2==7 & ps.list$Var3==7 & ps.list$Var4==7,]
ps.list[ps.list$Var1==7 & ps.list$Var2==7 & ps.list$Var3==7 & ps.list$Var4==7 & ps.list$var5==7,]
ps.list[ps.list$Var1==7 & ps.list$Var2==7 & ps.list$Var3==7 & ps.list$Var4==7 & ps.list$Var5==7,]
ps.to.m(ps.list[100842,])
ps.to.m(ps.list[100842,])
diffs[1,100842]
head(by.t[[1]])
head(by.t[[1]]$diffs)
max(by.t[[1]]$diffs)
which.max(by.t[[1]]$diffs)
by.t[[1]][720]
by.t[[1]][720,]
max.phis[[1]]
max.phis[[1]]
max.phis$`1`
which.max(by.t$`1`$diffs)
by.t$`1`$diffs[3600]
by.t$`1`[3600,]
max.phis$`2`
max.phis$`1`
ps.to.m(c(7,7,7,7,7,6))
ps.to.m(c(7,7,7,7,7,5))
head(rownames(by.t$`1`))
'100842' %in% rownames(by.t$`1`)
which('100842'  ==rownames(by.t$`1`))
by.t$`2`[4320,]
max.phis
min.phis
max.phis
max.phis
max.phis[[2]]
max.phis[[1]]
min.phis
min.phis[[3]]
min.phis[[3]]
min.phis
sum(min.phis[[6]]$`1`)
phi <- min.phis[[3]]$`1`
phi
sum(diag(phi)*(colSums(phi)+rowSums(phi)))
M*t
M
t <- sum(diag(phi))
t
M*t
phi
terms
deltas
pi
sum(phi)
sum(cumsum(deltas))
phi
pi
phi
eltas
deltas
S
S
sum(gamma)/2+t
Phi[1,3]
concord(x[[1]],y[[3]])
concord(x[[3]],y[[1]])
concord(x[[1]],y[[3]])
Phi[1,3]
Vx
colSums(phi)
colSums(Phi)
rowSums(Phi)
auc.jk(x,y)
auc.jk(x,y)
theta.hat
theta.hat
auc.jk(x,y)
auc.obu(x,y)
theta.hat
str(crossterms)
I
str(crossterms)
auc.obu(x,y)
auc.true
str(xy)
auc.true
auc.true
est
est['theta.hat'] + c(-1,1)*qnorm(1-alpha)
alpha <- .05
est['theta.hat'] + c(-1,1)*qnorm(1-alpha)
est['theta.hat'] + c(-1,1)*qnorm(1-alpha)*sqrt(est['var.hat'])
str(coverages)
mean(coverages)
I
coverages
est
auc.obu
auc.obu(x,y,c(.04,.01))
auc.obu(x,y,c(.04))
str(coverages)
str(CIs)
str(lower)
coverages
auc.jk
est
str(CIs)
alphas
coverages
coverages - 1
coverages - alphas
coverages
)
dev.new()
coverages
by.I
Is
alpha
by.I-(1-alpha)
mc.cores
n.cores
?parallel
detectCores()
by.I
simplify2array
I
o
I=20
by.I
dev.new()
by.I
 [1] 0.856 0.884 0.868 0.856 0.874 0.886 0.876 0.884 0.850 0.868
theta.hat
auc.jk(x,y)
auc.obu(x,y)
str(x)
I
auc.obu(x,y)
theta.hat
ijkl
ss
sum(ss)
ss
sum(ss)
