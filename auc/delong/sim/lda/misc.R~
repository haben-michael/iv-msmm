sampler.init <- function(n,p,auc,epsilon=NULL,pi.0=NULL,adjust.size=NULL) {
    stopifnot((!is.null(epsilon) && !is.null(pi.0)) || !is.null(adjust.size))
    if(is.null(epsilon) || is.null(pi.0)) { ## this branch may need updating
        u <- 4*p*pi*exp(1)*adjust.size^2
        pi.0.min <- 1/2*(1-u+sqrt(u*(u+2)))
        stopifnot(pi.0.min>1/2)
        ## pi.0 <- runif(1,pi.0.min,1)
        pi.0 <- pi.0.min*.9  + .1*1
        stopifnot(auc>.5 && auc < 1)
        a <- (1-2*pi.0)^2/16/p/pi/exp(1)
        b <- -2*a-pi.0*adjust.size^2
        c <- a+(pi.0-1)*adjust.size^2
        epsilon <- min(1/2/a*(-b+c(-1,1)*sqrt(b^2-4*a*c)))
        stopifnot(epsilon>0)
    } 
    pi.1 <- 1-pi.0
    d <- uniroot(function(x)pnorm(x*sqrt(p/2)) - auc,interval=c(0,1))$root
    d <- sqrt(2/p)
    beta.star <- rep(1,p )*d
    Sigma.1 <- diag(p) 
    Sigma.0 <- diag(c(rep(epsilon,p/2),rep(2-epsilon,p/2)) )
    Sigma.pi <- pi.0*Sigma.0+pi.1*Sigma.1
    Sigma <- Sigma.0+Sigma.1
    mu.0 <- rep(0,p)
    mu.1 <- (pi.0*Sigma.0+pi.1*Sigma.1)%*%beta.star
    params <- list(mu.0=mu.0,mu.1=mu.1,Sigma.0=Sigma.0,Sigma.1=Sigma.1,pi.0=pi.0,beta=beta.star,pi.0=pi.0)
    params$deriv.star <- auc.deriv.lda.gaussian(beta.star,params)
    params$auc <- auc.lda.gaussian(beta.star,params)
    ## n <- 5e3
    n.0 <- round(n*pi.0); n.1 <- n-n.0
    ## n.0 <- rbinom(1,n,pi.0); n.1 <- n-n.0
    stopifnot(n.0<n)
    sample <- function() {
        x.0 <- rmvnorm(n.0,mu.0,Sigma.0)
        x.1 <- rmvnorm(n.1,mu.1,Sigma.1)
        x <- rbind(x.0,x.1)
        d <- c(rep(0,n.0),rep(1,n.1))
        return(list(x=x,d=d))
    }
    return(list(n.0=n.0,n.1=n.1,params=params,sample=sample))
}
