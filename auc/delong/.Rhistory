B <- 1e4
remainder <- replicate(B, {
s <- runif(4)
s <- s/sqrt(sum(s^2))
s[5] <- 1#runif(1)
Svec1 <- c(c(1/(s[1] - s[2]) - s[1]/sum(s^2), -1/(s[1] - s[2]) - s[2]/sum(s^2), -s[3]/sum(s^2), -s[4]/sum(s^2)), -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
Svec2 <- c(c(-s[1]/sum(s^2), -s[2]/sum(s^2), 1/(s[3] - s[4]) - s[3]/sum(s^2), -1/(s[3] - s[4]) - s[4]/sum(s^2)),  -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
SSmat <- (Svec1%*%t(Svec2) + t(Svec1%*%t(Svec2)))/2
eig <- eigen(SSmat)
c(d1=abs(s[2]-s[1]),d2=abs(s[3]-s[4]),const=abs(s[5]/eig$vec[5,1]) - s[5]^2*2/(abs(s[2]-s[1])+abs(s[3]-s[4])))
})
require(rgl)
plot3d(remainder['d1',],remainder['d2',],remainder['const',])
require(parallel)
n <- 5
B <- 1e3
rem <- replicate(B, {
s <- rexp(4)
s <- s/sqrt(sum(s^2))
s[5] <- 1#runif(1)
Svec1 <- c(c(1/(s[1] - s[2]) - s[1]/sum(s^2), -1/(s[1] - s[2]) - s[2]/sum(s^2), -s[3]/sum(s^2), -s[4]/sum(s^2)), -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
Svec2 <- c(c(-s[1]/sum(s^2), -s[2]/sum(s^2), 1/(s[3] - s[4]) - s[3]/sum(s^2), -1/(s[3] - s[4]) - s[4]/sum(s^2)),  -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
SSmat <- (Svec1%*%t(Svec2) + t(Svec1%*%t(Svec2)))/2
eig <- eigen(SSmat)
c(d1=abs(s[2]-s[1]),d2=abs(s[3]-s[4]),normsqr=sum(s[1:4]^2),const=abs(s[5]/eig$vec[5,1]) - 2*s[5]^2/(abs(s[2]-s[1])+abs(s[3]-s[4])))
})
formula = rem['normsqr',]*2/(rem['d1',]+rem['d2',])
plot(rem['const',],rem['normsqr',]*2/(rem['d1',]+rem['d2',]))
abline(0,1)
max(abs(rem['const',] - error))
max(abs(rem['const',] - formula))
plot(rem['normsqr',],abs(rem['const',] - error))
plot(rem['d2',],abs(rem['const',]/error))
plot(rem['d2',],abs(rem['const',]/formula))
require(rgl)
grid = seq(0.1,.4,len=100)
xy = expand.grid(grid,grid)
plot3d(rem['d1',],rem['d2',],abs(rem['const',]-formula))
points3d(xy[,1],xy[,2],xy[,1]*xy[,2],col='red')
plot3d(rem['d1',],rem['d2',],abs(rem['const',] / formula))
formula = rem['normsqr',]*1/(rem['d1',]+rem['d2',])
plot(rem['const',],rem['normsqr',]*2/(rem['d1',]+rem['d2',]))
abline(0,1)
max(abs(rem['const',] - formula))
plot(rem['normsqr',],abs(rem['const',] - formula))
plot(rem['d2',],abs(rem['const',]/formula))
require(rgl)
grid = seq(0.1,.4,len=100)
xy = expand.grid(grid,grid)
plot3d(rem['d1',],rem['d2',],abs(rem['const',]-formula))
points3d(xy[,1],xy[,2],xy[,1]*xy[,2],col='red')
plot3d(rem['d1',],rem['d2',],abs(rem['const',] / formula))
formula = rem['normsqr',]*2/(rem['d1',]+rem['d2',])
plot(rem['const',],rem['normsqr',]*2/(rem['d1',]+rem['d2',]))
abline(0,1)
max(abs(rem['const',] - formula))
plot(rem['normsqr',],abs(rem['const',] - formula))
plot(rem['d2',],abs(rem['const',]/formula))
require(rgl)
grid = seq(0.1,.4,len=100)
xy = expand.grid(grid,grid)
plot3d(rem['d1',],rem['d2',],abs(rem['const',]-formula))
points3d(xy[,1],xy[,2],xy[,1]*xy[,2],col='red')
plot3d(rem['d1',],rem['d2',],abs(rem['const',] / formula))
which.min(abs(rem['const',] / formula))
rem[,304]
min(abs(rem['const',] / formula))
require(parallel)
n <- 5
B <- 1e3
rem <- replicate(B, {
s <- rexp(4)
s <- s/sqrt(sum(s^2))
s[5] <- 1#runif(1)
Svec1 <- c(c(1/(s[1] - s[2]) - s[1]/sum(s^2), -1/(s[1] - s[2]) - s[2]/sum(s^2), -s[3]/sum(s^2), -s[4]/sum(s^2)), -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
Svec2 <- c(c(-s[1]/sum(s^2), -s[2]/sum(s^2), 1/(s[3] - s[4]) - s[3]/sum(s^2), -1/(s[3] - s[4]) - s[4]/sum(s^2)),  -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
SSmat <- (Svec1%*%t(Svec2) + t(Svec1%*%t(Svec2)))/2
eig <- eigen(SSmat)
c(d1=abs(s[2]-s[1]),d2=abs(s[3]-s[4]),normsqr=sum(s[1:4]^2),const=abs(s[5]/eig$vec[5,1]) - 2*s[5]^2/(abs(s[2]-s[1])+abs(s[3]-s[4])))
})
formula = rem['normsqr',]*2/(rem['d1',]+rem['d2',])
formula = rem['normsqr',]*2/(rem['d1',]+rem['d2',])/(1+rem['d1',]^2)
plot(rem['const',],rem['normsqr',]*2/(rem['d1',]+rem['d2',]))
abline(0,1)
max(abs(rem['const',] - formula))
plot(rem['normsqr',],abs(rem['const',] - formula))
formula = rem['normsqr',]*2/(rem['d1',]+rem['d2',])
plot(rem['const',],rem['normsqr',]*2/(rem['d1',]+rem['d2',]))
abline(0,1)
max(abs(rem['const',] - formula))
plot(rem['normsqr',],abs(rem['const',] - formula))
plot(rem['d2',],sqrt(formula/abs(rem['const',])-1),asp=1)
require(rgl)
grid = seq(0.1,.4,len=100)
xy = expand.grid(grid,grid)
plot3d(rem['d1',],rem['d2',],abs(rem['const',]-formula))
points3d(xy[,1],xy[,2],xy[,1]*xy[,2],col='red')
plot3d(rem['d1',],rem['d2',],abs(rem['const',]-formula))
points3d(xy[,1],xy[,2],1/(1+xy[,1]^2)/(1+xy[,2]^2),col='red')
plot3d(rem['d1',],rem['d2',],abs(rem['const',] / formula))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],xy[,1]^2*xy[,2]^2,col='red')
points3d(xy[,1],xy[,2],xy[,1]*xy[,2],col='red')
points3d(xy[,1],xy[,2],xy[,1]^2*xy[,2]*4,col='red')
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],(1+xy[,1]^2)*(1+xy[,2]^2),col='red')
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],(1+xy[,1]^2)*(1+xy[,2]^2),col='red')
points3d(xy[,1],xy[,2],(1+xy[,1]^2)*(1+xy[,2]^2)/2,col='red')
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],(1+xy[,1]^2)*(1+xy[,2]^2),col='red')
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],((1+xy[,1]^2)*(1+xy[,2]^2)-1)/2,col='red')
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],((1+xy[,1]^2)*(1+xy[,2]^2)-1)/3,col='red')
summary(rem['d1',])
grid = seq(0,.4,len=100)
xy = expand.grid(grid,grid)
grid = seq(0,1,len=100)
xy = expand.grid(grid,grid)
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],((1+xy[,1]^2)*(1+xy[,2]^2)-1)/3,col='red')
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],((1+xy[,1]^2)*(1+xy[,2]^2)-1)*.33,col=rgb(1,0,0,.3))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],((2+xy[,1]^2)*(2+xy[,2]^2)-1)/4,col=rgb(1,0,0,.3))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],((1+xy[,1]^2)*(1+xy[,2]^2)-1),col=rgb(1,0,0,.3))
points3d(xy[,1],xy[,2],((1+xy[,1]^2)*(1+xy[,2]^2)),col=rgb(1,0,0,.3))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],((1+xy[,1]^2)*(1+xy[,2]^2)),col=rgb(1,0,0,.3))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],((1+xy[,1]^2/2)*(1+xy[,2]^2/2)),col=rgb(1,0,0,.3))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],((1+xy[,1]/2)*(1+xy[,2]/2)),col=rgb(1,0,0,.3))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],((2+xy[,1]^2/2)*(2+xy[,2]^2/2)),col=rgb(1,0,0,.3))
points3d(xy[,1],xy[,2],((2+xy[,1]^2/2)*(2+xy[,2]^2/4)),col=rgb(1,0,0,.3))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],((2+xy[,1]^2/2)*(2+xy[,2]^2/4)),col=rgb(1,0,0,.3))
points3d(xy[,1],xy[,2],((2+xy[,1]^2/2)*(2+xy[,2]^2))/4,col=rgb(1,0,0,.3))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],((2+xy[,1]^2/2)*(2+xy[,2]^2))/4,col=rgb(1,0,0,.3))
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],((2+xy[,1]^2)*(2+xy[,2]^2))/4,col=rgb(1,0,0,.3))
points3d(xy[,1],xy[,2],(xy[,2]^2+xy[,1]^2))
points3d(xy[,1],xy[,2],(xy[,2]^2+xy[,1]^2),col=2)
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',]))
points3d(xy[,1],xy[,2],(xy[,2]^2+xy[,1]^2)+1,col=2)
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],(xy[,2]^2+xy[,1]^2),col=2)
points3d(xy[,1],xy[,2],(xy[,2]^2+xy[,1]^2)/2,col=2)
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],(xy[,2]^2+xy[,1]^2)/2,col=2)
points3d(xy[,1],xy[,2],(xy[,2]^2+xy[,1]^2)/4,col=2)
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],(xy[,2]^2+xy[,1]^2)/4,col=2)
points3d(xy[,1],xy[,2],(xy[,2]^2+xy[,1]^2)*.33,col=2)
plot3d(rem['d1',],rem['d2',],formula/abs(rem['const',])-1)
points3d(xy[,1],xy[,2],(xy[,2]^2+xy[,1]^2)*.33,col=2)
require(parallel)
save.path <- '/mnt/d/data'
filelist <- dir(save.path)
filelist <- filelist[grep('^save[-0-9]+\\.RData',filelist)]
rZ <- function(n)rbeta(n,.3,.3)-1/2
rZ <- function(n)rnorm(n)
res <- mclapply(filelist,mc.cores=detectCores()-2,FUN=function(file) {
print(file)
load(paste0(save.path,'/',file))
B <- length(by.n[[1]])
zs <- lapply(ns, function(n)matrix(rZ(n*B),nrow=n))
evec.pos <- lapply(1:length(ns), function(j) sapply(by.n[[j]],function(eig)eig$vectors[,1]))
evec.neg <- lapply(1:length(ns), function(j) sapply(by.n[[j]],function(eig)eig$vectors[,2]))
proj4.pos <- lapply(1:length(ns), function(j)colSums(zs[[j]][1:4,]*evec.pos[[j]][1:4,]))
proj4.neg <- lapply(1:length(ns), function(j)colSums(zs[[j]][1:4,]*evec.neg[[j]][1:4,]))
projrest.pos <- lapply(1:length(ns), function(j)colSums(zs[[j]][5:(ns[j]),]*evec.pos[[j]][5:(ns[j]),]))
projrest.neg <- lapply(1:length(ns), function(j)colSums(zs[[j]][5:(ns[j]),]*evec.neg[[j]][5:(ns[j]),]))
proj <- lapply(1:length(ns), function(j)cbind(n=ns[j],proj4.pos=proj4.pos[[j]],proj4.neg=proj4.neg[[j]],projrest.pos=projrest.pos[[j]],projrest.neg=projrest.neg[[j]]))
do.call(rbind,proj)
})
res <- do.call(rbind,res)
n <- res[,'n']; proj <- as.data.frame(res[,c('proj4.pos','proj4.neg','projrest.pos','projrest.neg')])
mean.diff <- by(proj,n,function(df)mean((df$proj4.pos+df$projrest.pos)^2 < (df$proj4.neg+df$projrest.neg)^2))
plot(names(mean.diff),mean.diff); abline(h=.5,lty=2)
res <- lapply(filelist,FUN=function(file) {
print(file)
load(paste0(save.path,'/',file))
B <- length(by.n[[1]])
zs <- lapply(ns, function(n)matrix(rZ(n*B),nrow=n))
evec.pos <- lapply(1:length(ns), function(j) sapply(by.n[[j]],function(eig)eig$vectors[,1]))
evec.neg <- lapply(1:length(ns), function(j) sapply(by.n[[j]],function(eig)eig$vectors[,2]))
proj4.pos <- lapply(1:length(ns), function(j)colSums(zs[[j]][1:4,]*evec.pos[[j]][1:4,]))
proj4.neg <- lapply(1:length(ns), function(j)colSums(zs[[j]][1:4,]*evec.neg[[j]][1:4,]))
projrest.pos <- lapply(1:length(ns), function(j)colSums(zs[[j]][5:(ns[j]),]*evec.pos[[j]][5:(ns[j]),]))
projrest.neg <- lapply(1:length(ns), function(j)colSums(zs[[j]][5:(ns[j]),]*evec.neg[[j]][5:(ns[j]),]))
proj <- lapply(1:length(ns), function(j)cbind(n=ns[j],proj4.pos=proj4.pos[[j]],proj4.neg=proj4.neg[[j]],projrest.pos=projrest.pos[[j]],projrest.neg=projrest.neg[[j]]))
do.call(rbind,proj)
})
res <- do.call(rbind,res)
n <- res[,'n']; proj <- as.data.frame(res[,c('proj4.pos','proj4.neg','projrest.pos','projrest.neg')])
mean.diff <- by(proj,n,function(df)mean((df$proj4.pos+df$projrest.pos)^2 < (df$proj4.neg+df$projrest.neg)^2))
plot(names(mean.diff),mean.diff); abline(h=.5,lty=2)
dd
dd
res <- lapply(filelist,FUN=function(file) {
print(file)
load(paste0(save.path,'/',file))
B <- length(by.n[[1]])
zs <- lapply(ns, function(n)matrix(rZ(n*B),nrow=n))
evec.pos <- lapply(1:length(ns), function(j) sapply(by.n[[j]],function(eig)eig$vectors[,1]))
evec.neg <- lapply(1:length(ns), function(j) sapply(by.n[[j]],function(eig)eig$vectors[,2]))
proj4.pos <- lapply(1:length(ns), function(j)colSums(zs[[j]][1:4,]*evec.pos[[j]][1:4,]))
proj4.neg <- lapply(1:length(ns), function(j)colSums(zs[[j]][1:4,]*evec.neg[[j]][1:4,]))
projrest.pos <- lapply(1:length(ns), function(j)colSums(zs[[j]][5:(ns[j]),]*evec.pos[[j]][5:(ns[j]),]))
projrest.neg <- lapply(1:length(ns), function(j)colSums(zs[[j]][5:(ns[j]),]*evec.neg[[j]][5:(ns[j]),]))
proj <- lapply(1:length(ns), function(j)cbind(n=ns[j],proj4.pos=proj4.pos[[j]],proj4.neg=proj4.neg[[j]],projrest.pos=projrest.pos[[j]],projrest.neg=projrest.neg[[j]]))
do.call(rbind,proj)
})
require(parallel)
save.path <- '/mnt/d/data'
filelist <- dir(save.path)
filelist <- filelist[grep('^save[-0-9]+\\.RData',filelist)]
rZ <- function(n)rbeta(n,.3,.3)-1/2
rZ <- function(n)rnorm(n)
save.path <- 'd:/data'
filelist <- dir(save.path)
filelist <- filelist[grep('^save[-0-9]+\\.RData',filelist)]
rZ <- function(n)rbeta(n,.3,.3)-1/2
rZ <- function(n)rnorm(n)
filelist
res <- lapply(filelist,FUN=function(file) {
print(file)
load(paste0(save.path,'/',file))
B <- length(by.n[[1]])
zs <- lapply(ns, function(n)matrix(rZ(n*B),nrow=n))
evec.pos <- lapply(1:length(ns), function(j) sapply(by.n[[j]],function(eig)eig$vectors[,1]))
evec.neg <- lapply(1:length(ns), function(j) sapply(by.n[[j]],function(eig)eig$vectors[,2]))
proj4.pos <- lapply(1:length(ns), function(j)colSums(zs[[j]][1:4,]*evec.pos[[j]][1:4,]))
proj4.neg <- lapply(1:length(ns), function(j)colSums(zs[[j]][1:4,]*evec.neg[[j]][1:4,]))
projrest.pos <- lapply(1:length(ns), function(j)colSums(zs[[j]][5:(ns[j]),]*evec.pos[[j]][5:(ns[j]),]))
projrest.neg <- lapply(1:length(ns), function(j)colSums(zs[[j]][5:(ns[j]),]*evec.neg[[j]][5:(ns[j]),]))
proj <- lapply(1:length(ns), function(j)cbind(n=ns[j],proj4.pos=proj4.pos[[j]],proj4.neg=proj4.neg[[j]],projrest.pos=projrest.pos[[j]],projrest.neg=projrest.neg[[j]]))
do.call(rbind,proj)
})
res <- do.call(rbind,res)
n <- res[,'n']; proj <- as.data.frame(res[,c('proj4.pos','proj4.neg','projrest.pos','projrest.neg')])
mean.diff <- by(proj,n,function(df)mean((df$proj4.pos+df$projrest.pos)^2 < (df$proj4.neg+df$projrest.neg)^2))
plot(names(mean.diff),mean.diff); abline(h=.5,lty=2)
n <- 5
B <- 1e4
rZ <- function(n)runif(n,-1,1)
rZ <- rnorm
rZ <- function(n)2*rbinom(n,1,.5)-1
z <- matrix(rZ(n*B),nrow=n)
rS <- runif
s.mat <- split(matrix(rS(n*B),nrow=B),1:B)
evecs <- simplify2array(lapply(s.mat, function(s) {
Svec1 <- c(c(1/(s[1] - s[2]) - s[1]/sum(s^2), -1/(s[1] - s[2]) - s[2]/sum(s^2), -s[3]/sum(s^2), -s[4]/sum(s^2)), -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
Svec2 <- c(c(-s[1]/sum(s^2), -s[2]/sum(s^2), 1/(s[3] - s[4]) - s[3]/sum(s^2), -1/(s[3] - s[4]) - s[4]/sum(s^2)),  -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
SSmat <- (Svec1%*%t(Svec2) + t(Svec1%*%t(Svec2)))/2
eig <- eigen(SSmat)
cbind(pos=eig$vec[,1],neg=eig$vec[,n])
}))
evec.pos <- evecs[,'pos',]; evec.neg <- evecs[,'neg',]
plot(evec.pos[3,],evec.pos[4,],asp=1);abline(-1,1,col=2);abline(1,1,col=2);abline(0,-1,col=2)
require(rgl)
str(s)
rm(s)
str(s.mat)
s.lst <- split(matrix(rS(n*B),nrow=B),1:B)
evecs <- simplify2array(lapply(s.lst, function(s) {
Svec1 <- c(c(1/(s[1] - s[2]) - s[1]/sum(s^2), -1/(s[1] - s[2]) - s[2]/sum(s^2), -s[3]/sum(s^2), -s[4]/sum(s^2)), -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
Svec2 <- c(c(-s[1]/sum(s^2), -s[2]/sum(s^2), 1/(s[3] - s[4]) - s[3]/sum(s^2), -1/(s[3] - s[4]) - s[4]/sum(s^2)),  -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
SSmat <- (Svec1%*%t(Svec2) + t(Svec1%*%t(Svec2)))/2
eig <- eigen(SSmat)
cbind(pos=eig$vec[,1],neg=eig$vec[,n])
}))
evec.pos <- evecs[,'pos',]; evec.neg <- evecs[,'neg',]
plot(evec.pos[3,],evec.pos[4,],asp=1);abline(-1,1,col=2);abline(1,1,col=2);abline(0,-1,col=2)
require(rgl)
s1s <- sapply(s.lst,function(s)s[1])
plot3d(evec.pos[1,],evec.pos[2,],s1s)
stat <- sapply(s.lst,function(s)s[1]-s[2])
plot3d(evec.pos[1,],evec.pos[2,],stat)
stat <- sapply(s.lst,function(s)abs(s[1]-s[2])
dd
stat <- sapply(s.lst,function(s)abs(s[1]-s[2]))
plot3d(evec.pos[1,],evec.pos[2,],stat)
stat <- sapply(s.lst,function(s)(s[1]-s[2]))
plot3d(evec.pos[1,],evec.pos[2,],stat)
B <- 1e5
rZ <- function(n)runif(n,-1,1)
rZ <- rnorm
rZ <- function(n)2*rbinom(n,1,.5)-1
z <- matrix(rZ(n*B),nrow=n)
rS <- runif
s.lst <- split(matrix(rS(n*B),nrow=B),1:B)
evecs <- simplify2array(lapply(s.lst, function(s) {
Svec1 <- c(c(1/(s[1] - s[2]) - s[1]/sum(s^2), -1/(s[1] - s[2]) - s[2]/sum(s^2), -s[3]/sum(s^2), -s[4]/sum(s^2)), -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
Svec2 <- c(c(-s[1]/sum(s^2), -s[2]/sum(s^2), 1/(s[3] - s[4]) - s[3]/sum(s^2), -1/(s[3] - s[4]) - s[4]/sum(s^2)),  -s[4+seq_len(max(n+1-5,0))]/sum(s^2))
SSmat <- (Svec1%*%t(Svec2) + t(Svec1%*%t(Svec2)))/2
eig <- eigen(SSmat)
cbind(pos=eig$vec[,1],neg=eig$vec[,n])
}))
evec.pos <- evecs[,'pos',]; evec.neg <- evecs[,'neg',]
require(rgl)
stat <- sapply(s.lst,function(s)(s[1]-s[2]))
plot3d(evec.pos[1,],evec.pos[2,],stat)
stat <- sapply(s.lst,function(s)(s[3]-s[4]))
plot3d(evec.pos[1,],evec.pos[2,],stat)
stat <- sapply(s.lst,function(s)(s[2]-s[1]))
plot3d(evec.pos[1,],evec.pos[2,],stat)
install.packages("rgdal")
seed=1
require(mvtnorm)
require(numDeriv)
source('misc.R')
set.seed(seed)
start <- Sys.time()
p.full <- 4
p.red <- 2
n <- 3e3
mu <- runif(p.full)*2
Sigma <- matrix(runif(p.full^2),p.full)*2
Sigma <- Sigma%*%t(Sigma)
h <- plogis
h.1 <- function(x)h(x)*(1-h(x))
h.2 <- function(x)h.1(x)*(1-2*h(x))
link.name='logit'
beta.0 <- runif(p.full)
params.full <- list(mu=mu,Sigma=Sigma,beta=beta.0,link=h,link.deriv=h.1,link.deriv2=h.2)
beta.star.red <- as.numeric(coef.reduced.glm.gaussian(p.red,params.full,lim=10))
beta.star.red <- c(beta.star.red,rep(0,p.full-p.red))
auc.red <- auc.glm.gaussian(beta.star.red,params.full)
grad(function(beta)auc.glm.gaussian(c(beta[1:2],0,0),params.full,5),beta.star.red)
Sys.time() - start
getwd()
setwd("C:/Users/haben/OneDrive - University of Massachusetts/umass/research/auc")
require(mvtnorm)
require(numDeriv)
source('misc.R')
set.seed(seed)
start <- Sys.time()
p.full <- 4
p.red <- 2
n <- 3e3
mu <- runif(p.full)*2
Sigma <- matrix(runif(p.full^2),p.full)*2
Sigma <- Sigma%*%t(Sigma)
h <- plogis
h.1 <- function(x)h(x)*(1-h(x))
h.2 <- function(x)h.1(x)*(1-2*h(x))
link.name='logit'
beta.0 <- runif(p.full)
params.full <- list(mu=mu,Sigma=Sigma,beta=beta.0,link=h,link.deriv=h.1,link.deriv2=h.2)
beta.star.red <- as.numeric(coef.reduced.glm.gaussian(p.red,params.full,lim=10))
beta.star.red <- c(beta.star.red,rep(0,p.full-p.red))
auc.red <- auc.glm.gaussian(beta.star.red,params.full)
grad(function(beta)auc.glm.gaussian(c(beta[1:2],0,0),params.full,5),beta.star.red)
Sys.time() - start
require(numDeriv)
install.packages("numDeriv")
require(mvtnorm)
require(numDeriv)
source('misc.R')
set.seed(seed)
start <- Sys.time()
p.full <- 4
p.red <- 2
n <- 3e3
mu <- runif(p.full)*2
Sigma <- matrix(runif(p.full^2),p.full)*2
Sigma <- Sigma%*%t(Sigma)
h <- plogis
h.1 <- function(x)h(x)*(1-h(x))
h.2 <- function(x)h.1(x)*(1-2*h(x))
link.name='logit'
beta.0 <- runif(p.full)
params.full <- list(mu=mu,Sigma=Sigma,beta=beta.0,link=h,link.deriv=h.1,link.deriv2=h.2)
beta.star.red <- as.numeric(coef.reduced.glm.gaussian(p.red,params.full,lim=10))
beta.star.red <- c(beta.star.red,rep(0,p.full-p.red))
auc.red <- auc.glm.gaussian(beta.star.red,params.full)
grad(function(beta)auc.glm.gaussian(c(beta[1:2],0,0),params.full,5),beta.star.red)
Sys.time() - start
install.packages("mvtnorm")
require(mvtnorm)
require(numDeriv)
source('misc.R')
set.seed(seed)
start <- Sys.time()
p.full <- 4
p.red <- 2
n <- 3e3
mu <- runif(p.full)*2
Sigma <- matrix(runif(p.full^2),p.full)*2
Sigma <- Sigma%*%t(Sigma)
h <- plogis
h.1 <- function(x)h(x)*(1-h(x))
h.2 <- function(x)h.1(x)*(1-2*h(x))
link.name='logit'
beta.0 <- runif(p.full)
params.full <- list(mu=mu,Sigma=Sigma,beta=beta.0,link=h,link.deriv=h.1,link.deriv2=h.2)
beta.star.red <- as.numeric(coef.reduced.glm.gaussian(p.red,params.full,lim=10))
beta.star.red <- c(beta.star.red,rep(0,p.full-p.red))
auc.red <- auc.glm.gaussian(beta.star.red,params.full)
grad(function(beta)auc.glm.gaussian(c(beta[1:2],0,0),params.full,5),beta.star.red)
Sys.time() - start
seed <- seed+1
require(mvtnorm)
require(numDeriv)
source('misc.R')
set.seed(seed)
start <- Sys.time()
p.full <- 4
p.red <- 2
n <- 3e3
mu <- runif(p.full)
Sigma <- matrix(runif(p.full^2),p.full)
Sigma <- Sigma%*%t(Sigma)
h <- plogis
h.1 <- function(x)h(x)*(1-h(x))
h.2 <- function(x)h.1(x)*(1-2*h(x))
link.name='logit'
beta.0 <- runif(p.full)
params.full <- list(mu=mu,Sigma=Sigma,beta=beta.0,link=h,link.deriv=h.1,link.deriv2=h.2)
beta.star.red <- as.numeric(coef.reduced.glm.gaussian(p.red,params.full,lim=10))
beta.star.red <- c(beta.star.red,rep(0,p.full-p.red))
auc.red <- auc.glm.gaussian(beta.star.red,params.full)
grad(function(beta)auc.glm.gaussian(c(beta[1:2],0,0),params.full,5),beta.star.red)
Sys.time() - start
seed <- seed+1
require(mvtnorm)
require(numDeriv)
source('misc.R')
set.seed(seed)
start <- Sys.time()
p.full <- 4
p.red <- 2
n <- 3e3
mu <- runif(p.full)
Sigma <- matrix(runif(p.full^2),p.full)
Sigma <- Sigma%*%t(Sigma)
h <- plogis
h.1 <- function(x)h(x)*(1-h(x))
h.2 <- function(x)h.1(x)*(1-2*h(x))
link.name='logit'
beta.0 <- runif(p.full)
params.full <- list(mu=mu,Sigma=Sigma,beta=beta.0,link=h,link.deriv=h.1,link.deriv2=h.2)
beta.star.red <- as.numeric(coef.reduced.glm.gaussian(p.red,params.full,lim=10))
deriv.star
ecdf(z.stats)
ecdf(z.stats)
plot(ecdf(z.stats))
curve(pnorm,add=TRUE)
str(ecdf(z.stats))
?ecdf
knots(ecdf(z.stats))
max(z.stats)
quantiles(z.stats)
quantile(z.stats)
plot(distances)
max.dist
deriv.star
approx.2
approx.2
summary(approx.2)
summary(as.numeric(approx.2))
beta.star
summary(as.numeric(approx.2))
hist(as.numeric(approx.2))
str(infl)
head(t(infl))
mean(as.numeric(approx.2))
deriv.star.hat
rowSums(infl[1:2,])
rowSums(infl)
rowSums(infl)
infl.lda
mean(z.stats)
beta.star.red
var(z.stats)
var(z.stats)
var(z.stats)
var(z.stats)
var(z.stats)
mean(z.stats)
var(z.stats)
var(z.stats)
p.red
str(z.stats)
str(z.stats)
hist(z.stats[1,])
hist(z.stats[2,])
str(infl.hat)
hist(infl.hat[1,])
