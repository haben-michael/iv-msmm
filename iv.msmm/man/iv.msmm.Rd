% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iv.msmm.R
\name{iv.msmm}
\alias{iv.msmm}
\title{Compute an MSMM parameter from longitudinal data using time-varying instrumental variables}
\usage{
iv.msmm(
  Y,
  A,
  Z,
  L,
  design,
  f.Z,
  delta,
  get.sandwich = FALSE,
  get.bootstrap = FALSE,
  nuisance.est = nuisance.est.1,
  nuisance.inf = nuisance.inf.1,
  stabilization = NULL,
  bootstrap.reps = 100
)
}
\arguments{
\item{Y}{response}

\item{A}{treatment}

\item{Z}{instrumental variable (binary)}

\item{design}{design matrix}

\item{f.Z}{conditional density for the IV}

\item{delta}{difference between treatment across the levels of the IV}

\item{get.sandwich}{toggle whether to compute the sandwich variance estimate}

\item{nuisance.est}{function to compute the nuisance estimators}

\item{nuisance.inf}{function to compute the nuisance sub-matrices of the information matrix}

\item{stabilization}{weight stabilization term}

\item{get.boostrap}{toggle whether to compute the bootstrap variance estimate}

\item{boostrap.reps}{number of bootstrap repetitions}
}
\value{
a named list consisting of parameter estimates and (if toggled) variance estimates
}
\description{
Compute an MSMM parameter from longitudinal data using time-varying instrumental variables
}
\examples{

T <- 2
n <- 5e2
A.space <- c(0,1)
beta <- rep(1,T)
nu <- c(const=0,L=.5,U=.5)
alpha <- c(const=-.8,L=.5)
b.U <- rep(3,T)
b.L <- rep(1,T)
delta <- function(A,Z,L,alpha=c(const=-.8,L=.5))  plogis(alpha['const']+alpha['L']*L) 
f.Z <- function(A,Z,L) .5^Z*(1-.5)^(1-Z)
Z <- matrix(rbinom(n*T,1,f.Z(NA,Z=1,NA)),nrow=n)
U <- matrix(rnorm(n*T),nrow=n)
A <- L <- A.mean <- L.mean <- matrix(nrow=n,ncol=T)
L.mean <- cbind(1,L.mean)#[,1] <- 1
for(t in 1:T) {
    L[,t] <- L.mean[,t] + rpois(n,lambda=1)-1
    delta.cached <- delta(NA,NA,L[,t],alpha=alpha)
    A.mean[,t] <- pnorm(nu['L']*L[,t] + nu['U']*U[,t])*(1-delta.cached) + Z[,t]*delta.cached
    A[,t] <- rbinom(n,1,prob=A.mean[,t])
    L.mean[,t+1] <- A[,t]
}
L.mean <- L.mean[,-(T+1)]
Y <- U\%*\%b.U + (L-L.mean)\%*\%b.L + A\%*\%beta + rnorm(n)

iv.msmm(Y,A,Z,L,design=A,f.Z=f.Z,
        delta=delta,
        nuisance.est=function(A,Z,L)list(alpha=alpha,beta=NULL,nu=nu),
        stabilization=(-1)^(1-A))
}
