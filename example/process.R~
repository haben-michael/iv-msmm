require(abind)
require(ggplot2)
require(dplyr)
require(xtable)
filelist <- dir()
filelist <- filelist[grep('^save[-0-9]+\\.RData',filelist)]


res <- lapply(filelist,function(file) {
    ## print(file)
    load(file)
    list(reps=reps,n=n,J=J,beta.true=beta[target.idx],beta.causal=beta.causal,sd.sandwich=sd.sandwich,sd.bootstrap=sd.bootstrap,cov.bootstrap=coverages[['bootstrap']]['0.95'],cov.sandwich=coverages[['sandwich']]['0.95'])
})

beta.ipw <- lapply(res,function(l)with(l,cbind(beta.ipw=beta.causal,beta.true=beta.true,sd.sandwich=sd.sandwich,sd.bootstrap=sd.bootstrap,n=n,J=J)))
beta.ipw <- as.data.frame(do.call(rbind,beta.ipw))
group_by(beta.ipw,J,n) %>% summarize(count=n(),bias=median(beta.ipw)-unique(beta.true),sd.mc=sd(beta.ipw),sd.sandwich=mean(sd.sandwich,trim=.0),sd.bootstrap=mean(sd.bootstrap,trim=.0)) %>% as.data.frame()

coverage <- lapply(res,function(l)with(l,cbind(cov.bootstrap=cov.bootstrap,cov.sandwich=cov.sandwich,n=n,J=J,reps=reps)))
coverage <- as.data.frame(do.call(rbind,coverage))
group_by(coverage,J,n) %>% summarize(cov.bootstrap=mean(cov.bootstrap),cov.sandwich=mean(cov.sandwich),reps=sum(reps)) %>% as.data.frame()


tab <- inner_join(
group_by(beta.ipw,J,n) %>% summarize(count=n(),bias=median(beta.ipw)-unique(beta.true),sd.mc=sd(beta.ipw),sd.sandwich=mean(sd.sandwich,trim=.0),sd.bootstrap=mean(sd.bootstrap,trim=.0)) %>% as.data.frame(),
group_by(coverage,J,n) %>% summarize(cov.sandwich=mean(cov.sandwich),cov.bootstrap=mean(cov.bootstrap),reps=sum(reps))%>% as.data.frame()
)  %>% mutate_all(round,2)
tab

## ## Js = c(4); ns = seq(100000,500000,by=100000)
## ## Js = c(3); ns = seq(10000,50000,by=10000)
## ## Js = c(2); ns = seq(1000,5000,by=1000)
## by.J <- lapply(list(T2=list(Js = c(2), ns = seq(1000,5000,by=1000)),T3=list(Js = c(3), ns = seq(10000,50000,by=10000)),T4=list(Js = c(4), ns = seq(100000,500000,by=100000))),function(l) {
##     with(l, {

##         df <- inner_join(
##             group_by(beta.ipw,J,n) %>% summarize(count=n(),bias=median(beta.ipw)-unique(beta.true),sd.mc=sd(beta.ipw),sd.sandwich=mean(sd.sandwich,trim=.0),sd.bootstrap=mean(sd.bootstrap,trim=.0)) %>% as.data.frame(),
##             group_by(coverage,J,n) %>% summarize(cov.bootstrap=mean(cov.bootstrap),cov.sandwich=mean(cov.sandwich))%>% as.data.frame()
##         )  %>% filter(J %in% Js & n %in% ns)  %>% mutate_all(round,2)
##         df <- subset(df,select=-count)
##         df <- df[,c(1:6,8,7)]
##         df

## ##     })})

## by.J <- do.call(rbind,by.J)
## rownames(by.J) <- NULL
## ## save.image('122719a.RData')
## load('122719a.RData')
rownames(tab) <- NULL
tab <- subset(tab,J%in%(2:4),select=c(J,n,bias,sd.mc,sd.sandwich,sd.bootstrap,cov.bootstrap,cov.sandwich))

## colnames(tab) <- c('T','n','bias','monte carlo sd','sandwich sd','bootstrap sd','sandwich coverage', 'bootstrap covarage')
## sink('010620a.tex')
## ## print(xtable(by.J), sanitize.text.function=function(x){x},floating=TRUE,floating.environment='sidewaystable')
## print(xtable(tab), sanitize.text.function=function(x){x})
## sink()
colnames(tab) <- c('T','n','bias','$\\sigma_{mc}$','$\\sigma_{sw}$','$\\sigma_{bs}$','coverage (sw)', 'covarage (bs)')
sink('010620a.tex')
## print(xtable(tab), sanitize.text.function=function(x){x},floating=TRUE,floating.environment='sidewaystable')
print(xtable(tab), sanitize.text.function=function(x){x})
sink()



## load(filelist[1])
## by.n <- Reduce(`+`,res)/(reps*length(res))
## causal.sd <- by.n[5,]
## q <- qnorm(1-.975)
## by.n <- by.n[-5,]-beta[target.idx]

## by.n <- abind(res,along=0)
## by.n <- apply(by.n/reps-beta[target.idx],2:3,mean,trim=.2)

## ## png('112418b.png')
## plot(ns,by.n['causal',],type='l',xlab='sample size',ylab='mean bias',ylim=c(min(c(0,by.n)),max(c(0,by.n))))
## ## arrows(ns,by.n['causal',] - q*causal.sd,ns,by.n['causal',] + q*causal.sd,length=.05,angle=90,code=3)
## lines(ns,by.n['oracle',],type='l',lty=2)
## lines(ns,by.n['sra',],type='l',lty=3)
## lines(ns,by.n['assoc',],type='l',lty=4)
## abline(h=0)#,col='red')
## ## curve(coef(lm( by.n['causal',] ~ I(1/sqrt(ns)) - 1))/sqrt(x),add=TRUE,col='blue')
## legend('topright',lty=1:4,legend=c('proposed','oracle','SRA','associational'),title='estimator')
## ## dev.off()
