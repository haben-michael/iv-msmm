rm(v.wi)
begg.test
getwd()
rS <- rexp
n
n <- 30
begg.test(z/s.total,1/s.total^2)
begg.test(z/s.total,1/s.total^2)$pval
names(begg.test(z/s.total,1/s.total^2))
begg.test(z/s.total,1/s.total^2)$pval$p.value
begg.test(z/s.total,1/s.total^2)$pval['p.value']
begg.test(z/s.total,1/s.total^2)['p.value']
begg.test(z/s.total,1/s.total^2)['p.value']
B
str(p.values)
str(p.values)
p.values[[1]]
p.values[[1]]
p.values[[4]]
unlist(p.values)
simplify2array(p.values)
str(p.values)
p.values
p.values[1,]
p.values[,1:10]
str(p.values[,1:10])
B <- 4
p.values
str(p.values)
as.matrix(p.values)
str(as.matrix(p.values))
p.values[1,1]
str(              begg.test(y=z/s.total,v=1/s.total^2,adjusted=TRUE)['p.value'])
   begg.test(y=z/s.total,v=1/s.total^2,adjusted=TRUE)['p.value']
str(   begg.test(y=z/s.total,v=1/s.total^2,adjusted=TRUE))
   begg.test(y=z/s.total,v=1/s.total^2,adjusted=TRUE)$p.value
p.values
power
by.distr
B
sum(by.distr>0)
sum(unlist(by.distr>0))
sum(unlist(by.distr)>0)
by.distr
by.distr
v.wi
summary(v.wi)
rS <- rSs[[3]]
v.wi
summary(v.wi)
rS <- rSs[[1]]
v.wi
v.wi
v.bw.hat
v.wi
v.wi
mean(v.wi)
rS
mean(1/rexp(n))
mean(1/(1+rexp(n)))
v.bw.hat
v.total
n
v.bw.hat
p.values
