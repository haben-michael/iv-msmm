## from sherlock
require(parallel)
save.path <- '/mnt/d/data'
filelist <- dir(save.path)
filelist <- filelist[grep('^save[-0-9]+\\.RData',filelist)]
rZ <- function(n)rbeta(n,.2,.2)-1/2
## rZ <- function(n)rnorm(n)

diffs <- mclapply(filelist,mc.cores=deetectCores()-2,FUN=function(file) {
    print(file)
    load(paste0(save.path,'/',file))
    B <- length(by.n[[1]])
    zs <- lapply(ns, function(n)matrix(rZ(n*B),nrow=n))
    evec.pos <- lapply(1:length(ns), function(n) sapply(by.n[[n]],function(eig)eig$vectors[,1]))
    evec.neg <- lapply(1:length(ns), function(n) sapply(by.n[[n]],function(eig)eig$vectors[,2]))
    proj4.pos <- lapply(1:length(ns), function(n)colSums(zs[[n]][1:4,]*evec.pos[[n]][1:4,]))
    proj4.neg <- lapply(1:length(ns), function(n)colSums(zs[[n]][1:4,]*evec.neg[[n]][1:4,]))
    projrest.pos <- lapply(1:length(ns), function(n)colSums(zs[[n]][5:(ns[n]),]*evec.pos[[n]][5:(ns[n]),]))
    projrest.neg <- lapply(1:length(ns), function(n)colSums(zs[[n]][5:(ns[n]),]*evec.neg[[n]][5:(ns[n]),]))
    sq.pos <- sapply(1:length(ns), function(n)c(sq4=mean(proj4.pos[[n]]^2),cross=mean(proj4.pos[[n]]*projrest.pos[[n]]),sqrest=mean(projrest.pos[[n]]^2)))
    sq.neg <- sapply(1:length(ns), function(n)c(sq4=mean(proj4.neg[[n]]^2),cross=mean(proj4.neg[[n]]*projrest.neg[[n]]),sqrest=mean(projrest.neg[[n]]^2)))
    sq.neg-sq.pos
})
diffs <- simplify2array(diffs)

medians <- apply(diffs,1:2,median)
plot(ns,medians['sq4',],type='l',ylim=range(medians)); abline(h=0,lty=2)
lines(ns,medians['cross',],col=2)
lines(ns,medians['sqrest',],col=3)
lines(ns,colSums(medians),col=4,lty=2)
abline(h=0,lty=2)
mean(colSums(medians)<0)


## from sherlock -- big mean rather than mean of means
require(parallel)
save.path <- '/mnt/d/data'
filelist <- dir(save.path)
filelist <- filelist[grep('^save[-0-9]+\\.RData',filelist)]
rZ <- function(n)rbeta(n,.2,.2)-1/2
## rZ <- runif(n)-1/2
## rZ <- function(n)rnorm(n)
## rZ <- function(n)rt(n,df=2.25)

res <- mclapply(filelist,mc.cores=detectCores()-2,FUN=function(file) {
## res <- lapply(filelist,FUN=function(file) {
    print(file)
    load(paste0(save.path,'/',file))
    B <- length(by.n[[1]])
    zs <- lapply(ns, function(n)matrix(rZ(n*B),nrow=n))
    evec.pos <- lapply(1:length(ns), function(j) sapply(by.n[[j]],function(eig)eig$vectors[,1]))
    evec.neg <- lapply(1:length(ns), function(j) sapply(by.n[[j]],function(eig)eig$vectors[,2]))
    ## proj4.pos <- lapply(1:length(ns), function(j)colSums(zs[[j]][1:4,]*evec.pos[[j]][1:4,]))
    ## proj4.neg <- lapply(1:length(ns), function(j)colSums(zs[[j]][1:4,]*evec.neg[[j]][1:4,]))
    ## projrest.pos <- lapply(1:length(ns), function(j)colSums(zs[[j]][5:(ns[j]),]*evec.pos[[j]][5:(ns[j]),]))
    ## projrest.neg <- lapply(1:length(ns), function(j)colSums(zs[[j]][5:(ns[j]),]*evec.neg[[j]][5:(ns[j]),]))
    ## proj <- lapply(1:length(ns), function(j)cbind(n=ns[j],proj4.pos=proj4.pos[[j]],proj4.neg=proj4.neg[[j]],projrest.pos=projrest.pos[[j]],projrest.neg=projrest.neg[[j]]))
    ## proj <- as.data.frame(do.call(rbind,proj))
    ## proj <- by(proj,proj$n,function(df)data.frame(n=unique(df$n),B=nrow(df),sum.gt=sum((df$proj4.neg+df$projrest.neg)^2 > (df$proj4.pos+df$projrest.pos)^2)))
    ## do.call(rbind,unname(proj))
    eval.pos <- sapply(1:length(ns), function(j) sapply(by.n[[j]], function(eig)eig$values[1]))
    eval.neg <- sapply(1:length(ns), function(j) sapply(by.n[[j]], function(eig)eig$values[2]))
    proj.pos <- sapply(1:length(ns), function(j)colSums(zs[[j]]*evec.pos[[j]]))
    proj.neg <- sapply(1:length(ns), function(j)colSums(zs[[j]]*evec.neg[[j]]))
    data.frame(B=B, n=ns, gt=colSums(proj.neg^2*eval.neg + proj.pos^2*eval.pos < 0), gt.vec=colSums(proj.neg^2 + proj.pos^2 < 0))
})
res <- do.call(rbind,res)

mean.gt <- by(res,res$n,function(df)sum(df$gt)/sum(df$B))
plot(names(mean.gt),mean.gt); abline(h=.5,lty=2)
mean.gt.vec <- by(res,res$n,function(df)sum(df$gt.vec)/sum(df$B))
points(names(mean.gt.vec),mean.gt.vec,col=2)
